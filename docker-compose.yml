version: '3.8'

services:
  # Interface 1 (Angular Frontend)
  interface1:
    build:
      context: ./interface1
      dockerfile: Dockerfile
    container_name: angular-interface1
    ports:
      - "4200:80" # Interface 1 accessible sur localhost:4200
    networks:
      - app-network

  # Interface 2 (Angular Frontend)
  interface2:
    build:
      context: ./interface2
      dockerfile: Dockerfile
    container_name: angular-interface2
    ports:
      - "4300:80" # Interface 2 accessible sur localhost:4300
    networks:
      - app-network

  # Backend (Spring Boot)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-backend
    ports:
      - "8080:8080" # Backend accessible sur localhost:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/db_name
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    depends_on:
      - mysql-db
    networks:
      - app-network

  # Base de donn√©es (MySQL)
  mysql_db:
    image: mysql:latest
    container_name: mysqldb
    ports:
      - "3306:3306"
    restart: always
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=devops
    volumes:
      - ./data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
